= javascript_include_tag 'application'

%ul
  - resources.each do |resource|
    %li= link_to resource.resource_name.human, "/admin/#{resource.resource_name.param_key.pluralize}"
    %li= link_to "Statistical Summary", "statistical_summary"

-undergrad_gen_table=GateCount::CardSwipe.where(user_group:"Undergraduate Student").where(affiliation_desc:"STUDENT").where(swipe_date: '2022-07-01 00:00:00'..'2023-06-30 00:00:00').where("door_name = ? OR door_name = ? OR door_name = ? OR door_name = ? OR door_name = ? OR door_name = ?","VAN PELT LIBRARY TURN1_ *VPL","VAN PELT LIBRARY TURN2_ *VPL","VAN PELT LIBRARY USC HANDICAP ENT VERIFY_ *VPL","VAN PELT LIBRARY ADA DOOR_ *VPL", "BIO LIBRARY TURNSTILE GATE_ *JSN", "FURNESS TURNSTILE_ *FUR" )

-grad_gen_table=GateCount::CardSwipe.where(user_group:"Grad Student").where(affiliation_desc:"STUDENT").where(swipe_date: '2022-07-01 00:00:00'..'2023-06-30 00:00:00').where("door_name = ? OR door_name = ? OR door_name = ? OR door_name = ? OR door_name = ? OR door_name = ?","VAN PELT LIBRARY TURN1_ *VPL","VAN PELT LIBRARY TURN2_ *VPL","VAN PELT LIBRARY USC HANDICAP ENT VERIFY_ *VPL","VAN PELT LIBRARY ADA DOOR_ *VPL", "BIO LIBRARY TURNSTILE GATE_ *JSN", "FURNESS TURNSTILE_ *FUR" )

-school_names=["College of Arts & Sciences","The Wharton School","School of Engineering and Applied Science","School of Nursing"]
-grad_school_names=['College of Arts & Sciences',"The Wharton School","Annenberg School for Communication","School of Dental Medicine","School of Design",'Graduate School of Education','School of Engineering and Applied Science','Law School',"Perelman School of Medicine","Veterinary Medicine","School of Nursing","School of Social Policy & Practice"]

-school_index=[0,1,2,3]
-grad_school_index=[0,1,2,3,4,5,6,7,8,9,10,11]

-furness_table=gen_stats(library_table,2023,"Furness")
-biotech_table=gen_stats(library_table,2023,"Biotech")
-van_pelt_table=gen_stats(library_table,2023,"Van Pelt")

%hr
%h2{style: "text-align:center;"} Fiscal Year 2023 School Population Statistics
%hr

%h2{style: "text-align:center"} Percentage of Gate Counts By Graduate School Per Library
#left-col
  %h3{style: "text-align:center;"} Furness
  =pie_chart  calc_percents(furness_table,"Counts","Grad Student"), round: 2, download: true

#right-col
  %h3{style: "text-align:center;"} Biotech Commons
  =pie_chart calc_percents(biotech_table,"Counts","Grad Student"), round: 2, download: true

%h2{style: "text-align:center;"} Percentage of Gate Counts By Graduate School Per Library
#data-viz
#single-col
  %h3{style: "text-align:center;"} Van Pelt
  =pie_chart calc_percents(van_pelt_table,"Counts","Grad Student"), round: 2, download: true

-grad_school_pop=[2168,2398,68,789,768,1664,4140,993,2122,571,607,663]

-grad_bar_percents=Hash.new

-grad_school_index.each {|i| grad_bar_percents[grad_school_names[i]]=(grad_gen_table.where("school=?", grad_school_names[i]).select(:card_num).distinct.count).fdiv(grad_school_pop[i])}

%h2{style: "text-align:center;"} Percentage of Graduate Students Using the Library Per School
#data-viz
#single-col
  =column_chart calc_percents(van_pelt_table,"People","Grad Student"), round: 2, download: true

-med_bio=calc_percents(biotech_table,"Raw Counts","Grad Student")
-vp_bio=calc_percents(van_pelt_table,"Raw Counts","Grad Student")

-med_bio_counts=med_bio.select{|k,v| k == "The Wharton School" || k == "School of Dental Medicine" || k == "Perelman School of Medicine" || k == "Veterinary Medicine" || k == "School of Nursing"}
-med_vp_counts=vp_bio.select{|k,v| k == "The Wharton School" || k == "School of Dental Medicine" || k == "Perelman School of Medicine" || k == "Veterinary Medicine" || k == "School of Nursing"}

#data-viz
  #single-col
    %h3{style: "text-align:center;"} Medical Students Usage of the Libraries (Gate Counts)
    =column_chart [{name: "BioTech", data: med_bio_counts}, {name: "Van Pelt", data: med_vp_counts}], stacked: true, download: true

-school_pop=[7135, 1758, 1777, 580]

%h2{style: "text-align:center;"} Percentage of Undergraduate Students Using the Library Per School
#data-viz
#single-col
  =column_chart calc_percents(van_pelt_table,"People","Undergraduate Student"), round: 2, download: true

%h2{style: "text-align:center;"} Percentage of Gate Counts By School
#data-viz
#single-col
  %h3{style: "text-align:center;"} Undergraduate Students
  =pie_chart calc_percents(van_pelt_table,"Counts","Undergraduate Student"), round: 2,  download: true

-undergrad_bio=calc_percents(biotech_table,"People","Undergraduate Student")
-undergrad_vp=calc_percents(van_pelt_table,"People","Undergraduate Student")
-undergrad_furn=calc_percents(furness_table,"People","Undergraduate Student")

-all_undergrad=[undergrad_vp,undergrad_bio,undergrad_furn]

-school_names=["College of Arts & Sciences","The Wharton School","School of Engineering and Applied Science","School of Nursing"]

-school_index=[0,1,2,3]

-school_pop=[0,0,0,0]

-school_index.each {|i| school_pop[i]=all_undergrad.pluck(school_names[i]).sum}

-bio_percents=Hash.new
-vp_percents=Hash.new
-furn_percents=Hash.new

-school_index.each {|i| bio_percents[school_names[i]]=(undergrad_bio[school_names[i]]).fdiv(school_pop[i])}
-school_index.each {|i| vp_percents[school_names[i]]=(undergrad_vp[school_names[i]]).fdiv(school_pop[i])}
-school_index.each {|i| furn_percents[school_names[i]]=(undergrad_furn[school_names[i]]).fdiv(school_pop[i])}

%h2{style: "text-align:center;"} Percentage of Gate Counts Per Library (Undergraduate Students)
#single-col
  =column_chart [{name: "BioTech", data: bio_percents}, {name: "Van Pelt", data: vp_percents}, {name: "Furness", data: furn_percents}], round: 2, download: true

-enroll_schools=['SAS','Wharton','Annenberg','Dental','Weitzman','Education','Engineering','Law','Perelman','Veterinary',
               'Nursing','SP2']
