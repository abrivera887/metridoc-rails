= javascript_include_tag 'application'

%ul
  - resources.each do |resource|
    %li= link_to resource.resource_name.human, "/admin/#{resource.resource_name.param_key.pluralize}"
    %li= link_to "Statistical Summary", "statistical_summary"

biotech_grad, bio_grad_counts=library_table("Biotech",2023,"Grad Student")
vp_grad, vp_grad_counts=library_table("Van Pelt",2023,"Grad Student")
furn_grad, furn_grad_counts=library_table("Furness",2023,"Grad Student")

biotech_undergrad, bio_under_counts=library_table("Biotech",2023,"Undergraduate Student")
vp_undergrad, vp_under_counts=library_table("Van Pelt",2023,"Undergraduate Student")
furn_undergrad, furn_under_counts=library_table("Furness",2023,"Undergraduate Student")

undergrad_gen, under_counts=library_table("All",2023,"Undergraduate Student")
grad_gen, grad_counts=library_table("All",2023,"Grad Student")

-grad_percents=Hash.new
-undergrad_percents=Hash.new

-school_names=["College of Arts & Sciences","The Wharton School","School of Engineering and Applied Science","School of Nursing"]

-grad_school_names=['College of Arts & Sciences',"The Wharton School","Annenberg School for Communication","School of Dental Medicine","School of Design",'Graduate School of Education','School of Engineering and Applied Science','Law School',"Perelman School of Medicine","Veterinary Medicine","School of Nursing","School of Social Policy & Practice"]

-school_index=[0,1,2,3]
-grad_school_index=[0,1,2,3,4,5,6,7,8,9,10,11]

-school_index.each {|i| undergrad_percents[school_names[i]]=(undergrad_gen[school_names[i]]).fdiv(under_counts).round(2)}
-grad_school_index.each {|i| grad_percents[grad_school_names[i]]=(grad_gen[grad_school_names[i]]).fdiv(grad_counts).round(2)}

-bio_percents=Hash.new
-vp_percents=Hash.new
-furn_percents=Hash.new

-grad_school_index.each {|i| bio_percents[grad_school_names[i]]=(biotech_grad[grad_school_names]).fdiv(bio_grad_counts).round(2)}
-grad_school_index.each {|i| vp_percents[grad_school_names[i]]=(vp_grad[grad_school_names]).fdiv(vp_grad_counts).round(2)}
-grad_school_index.each {|i| furn_percents[grad_school_names[i]]=(furn_grad[grad_school_names[i]]).fdiv(furn_grad_counts).round(2)}

%hr
%h2{style: "text-align:center;"} Fiscal Year 2023 School Population Statistics
%hr

%h2{style: "text-align:left;"} Percentage of Gate Counts By School
#data-viz
#left-col
  %h3{style: "text-align:center;"} Graduate Students
  =pie_chart grad_percents, download: true
%h2{style: "text-align:right"} Percentage of Gate Counts By Graduate School Per Library
#right-col
  %h3{style: "text-align:center;"} Furness
  =pie_chart furn_percents, download: true

%h2{style: "text-align:center;"} Percentage of Gate Counts By Graduate School Per Library
#data-viz
#left-col
  %h3{style: "text-align:center;"} Van Pelt
  =pie_chart vp_percents, download: true
#right-col
  %h3{style: "text-align:center;"} Biotech Commons
  =pie_chart bio_percents, download: true

-grad_school_pop=[2168,2398,68,789,768,1664,4140,993,2122,571,607,663]

-grad_bar_percents=Hash.new

-grad_school_index.each {|i| grad_bar_percents[grad_school_names[i]]=(grad_gen[grad_school_names[i]].select(:card_num).distinct.count).fdiv(grad_school_pop[i]).round(2)}

%h2{style: "text-align:center;"} Percentage of Graduate Students Using the Library Per School
#data-viz
#single-col
  =column_chart grad_bar_percents, download: true

med_school_names=["The Wharton School","School of Dental Medicine","Perelman School of Medicine","Veterinary Medicine","School of Nursing"]

med_school_index=[0,1,2,3,4]

-med_vp=Hash.new
-med_bio=Hash.new

-med_school_index.each {|i| med_bio[med_school_names[i]]=biotech_grad[med_school_names[i]]}

-med_school_index.each {|i| med_vp[med_school_names[i]]=vp_grad[med_school_names[i]]}

#data-viz
  #single-col
    %h3{style: "text-align:center;"} Medical Students Usage of the Libraries (Gate Counts)
    =column_chart [{name: "BioTech", data: med_bio, {name: "Van Pelt", data: med_vp}], stacked: true, download: true

-school_pop=[7135, 1758, 1777, 580]

-undergrad_bar_percents=Hash.new

-school_index.each {|i| undergrad_bar_percents[school_names[i]]=((undergrad_gen[school_names[i]]).select(:card_num).distinct.count).fdiv(school_pop[i]).round(2)}

%h2{style: "text-align:center;"} Percentage of Undergraduate Students Using the Library Per School
#data-viz
#single-col
  =column_chart undergrad_bar_percents, download: true

%h2{style: "text-align:center;"} Percentage of Gate Counts By School
#data-viz
#single-col
  %h3{style: "text-align:center;"} Undergraduate Students
  =pie_chart undergrad_percents, download: true

-school_pop=[0,0,0,0]

-school_index.each {|i| school_pop[i]=undergrad_gen_table[school_names[i]]}

-bio_percents=Hash.new
-vp_percents=Hash.new
-furn_percents=Hash.new

-school_index.each {|i| bio_percents[school_names[i]]=(biotech_undergrad[school_names[i]]).fdiv(school_pop[i]).round(2)}
-school_index.each {|i| vp_percents[school_names[i]]=(vp_undergrad[school_names[i]]).fdiv(school_pop[i]).round(2)}
-school_index.each {|i| furn_percents[school_names[i]]=(furn_undergrad[school_names[i]]).fdiv(school_pop[i]).round(2)}

%h2{style: "text-align:center;"} Percentage of Gate Counts Per Library (Undergraduate Students)
#single-col
  =column_chart [{name: "BioTech", data: bio_percents}, {name: "Van Pelt", data: vp_percents}, {name: "Furness", data: furn_percents}], download: true

-grad_enroll=Upenn::Enrollment.where(user:"Graduate Total")

-grad_2018=grad_enroll.where(fiscal_year:2018)
-grad_2019=grad_enroll.where(fiscal_year:2019)
-grad_2022=grad_enroll.where(fiscal_year:2022)
-grad_2023=grad_enroll.where(fiscal_year:2023)
