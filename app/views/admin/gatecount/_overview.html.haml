= javascript_include_tag 'application'

-school_names=['College of Arts & Sciences',"The Wharton School","Annenberg School for Communication","School of Dental Medicine","School of Design",'Graduate School of Education','School of Engineering and Applied Science','Law School',"Perelman School of Medicine","Veterinary Medicine","School of Nursing","School of Social Policy & Practice"]

-input_school_index=school_names.index(@input_school)

-enroll_names=['SAS','Wharton','Annenberg','Dental','Weitzman','Education','Engineering','Law','Perelman','Veterinary',
               'Nursing','SP2']

-school_pop=[9303,4156,68,789,768,1664,5917,993,2122,571,1187,663]

-furn_yearly=gen_stats(time_table,"All","Furness","All")
-bio_yearly=gen_stats(time_table,"All","Biotech","All")
-vp_yearly=gen_stats(time_table,"All","Van Pelt","All")

-furn_yearly_counts=time_counts(furn_yearly,"Yearly","Counts")
-bio_yearly_counts=time_counts(bio_yearly,"Yearly","Counts")
-vp_yearly_counts=time_counts(vp_yearly,"Yearly","Counts")

-furn_yearly_people=time_counts(furn_yearly,"Yearly","People")
-bio_yearly_people=time_counts(bio_yearly,"Yearly","People")
-vp_yearly_people=time_counts(vp_yearly,"Yearly","People")

-furn_fiscal_counts=time_counts(furn_yearly,"Fiscal_Year","Counts")
-bio_fiscal_counts=time_counts(bio_yearly,"Fiscal_Year","Counts")
-vp_fiscal_counts=time_counts(vp_yearly,"Fiscal_Year","Counts")

-furn_fiscal_people=time_counts(furn_yearly,"Fiscal_Year","People")
-bio_fiscal_people=time_counts(bio_yearly,"Fiscal_Year","People")
-vp_fiscal_people=time_counts(vp_yearly,"Fiscal_Year","People")

-bio_fiscal_counts["2016"]=106119
-bio_fiscal_counts["2017"]=102840
-bio_fiscal_counts["2018"]=97496
-bio_fiscal_counts["2019"]=107031
-bio_fiscal_counts["2020"]=85856

-bio_year=[2016,2017,2018,2019,2020,2021]
-month_text=["01","02","03","04","05","06","07","08","09","10","11","12"]

-bio_2016=["Count",10490,8165,11270,11178,10144,6803,4951,10103,7852,9605,8142,7416,106119]
-bio_2017=["Count",7374,7350,9660,10571,9037,8079,7033,9109,8644,9599,8363,8021,102840]
-bio_2018=["Count",6461,7310,9902,10568,8869,7296,6995,7658,8178,9813,7434,7012,97496]
-bio_2019=["Count",7374,6845,9503,11208,9407,8719,6486,9469,9581,11740,8010,8689,107031]
-bio_2020=["Count",9271,8631,12122,13036,9764,9624,7683,11430,4295,0,0,0,85856]
-bio_2021=["Count",0,0,0,0,0,0,0,0,0,0,0,0,0]

-month_range=(0..11).to_a
-bio_year_index=(0..bio_year.length-1).to_a

-#for y in bio_year_index
-#Make this less manual later...will affect charts though!
-for m in month_range
  -bio_yearly_counts["2016-"+month_text[m]+"-01"]=bio_2016[m]
  -bio_yearly_counts["2017-"+month_text[m]+"-01"]=bio_2017[m]
  -bio_yearly_counts["2018-"+month_text[m]+"-01"]=bio_2018[m]
  -bio_yearly_counts["2019-"+month_text[m]+"-01"]=bio_2019[m]
  -bio_yearly_counts["2020-"+month_text[m]+"-01"]=bio_2020[m]
  -bio_yearly_counts["2021-"+month_text[m]+"-01"]=bio_2021[m]

#data-viz
  #single-col
    %h2{style: "text-align:center;"} Card Swipes Per Month Per Library 2016-2023
    = line_chart [{name: "BioTech", data: bio_yearly_counts}, {name: "Furness", data: furn_yearly_counts},{name: "Van Pelt", data: vp_yearly_counts}], xtitle:"Years", ytitle: "Gate Counts", legend: true, curve: false, download: true

#data-viz
  #single-col
    %h2{style: "text-align:center;"} Number of Visitors Per Month Per Library 2016-2023
    = line_chart [{name: "BioTech", data: bio_yearly_people}, {name: "Furness", data: furn_yearly_people},{name: "Van Pelt", data: vp_yearly_people}], xtitle:"Years", ytitle: "Number of Visitors", legend: true, curve: false, download: true

#data-viz
  #single-col
    %h2{style: "text-align:center;"} Card Swipes Per Year Per Library 2016-2023
    = line_chart [{name: "BioTech", data: bio_fiscal_counts}, {name: "Furness", data: furn_fiscal_counts},{name: "Van Pelt", data: vp_fiscal_counts}], xtitle:"Years", ytitle: "Gate Counts", legend: true, curve: false, download: true

#data-viz
  #single-col
    %h2{style: "text-align:center;"} Number of Visitors Per Year Per Library 2016-2023
    = line_chart [{name: "BioTech", data: bio_fiscal_people}, {name: "Furness", data: furn_fiscal_people},{name: "Van Pelt", data: vp_fiscal_people}], xtitle:"Years", ytitle: "Number of Visitors", legend: true, curve: false, download: true

-furness_2023_table=gen_stats(time_table,2023,"Furness","All")
-biotech_2023_table=gen_stats(time_table,2023,"Biotech","All")
-vp_2023_table=gen_stats(time_table,2023,"Van Pelt","All")

-furn_2023_counts=time_counts(furness_2023_table,"Monthly","Counts")
-vp_2023_counts=time_counts(vp_2023_table,"Monthly","Counts")
-bio_2023_counts=time_counts(biotech_2023_table,"Monthly","Counts")

-furn_2023_people=time_counts(furness_2023_table,"Monthly","People")
-vp_2023_people=time_counts(vp_2023_table,"Monthly","People")
-bio_2023_people=time_counts(biotech_2023_table,"Monthly","People")

#data-viz
  #single-col
    %h2{style: "text-align:center;"} Card Swipes Per Month Per Library Fiscal Year 2023
    = line_chart [{name: "BioTech", data: bio_2023_counts}, {name: "Furness", data: furn_2023_counts},{name: "Van Pelt", data: vp_2023_counts}], xtitle:"Months", ytitle: "Gate Counts", legend: true, curve: false, download: true

#data-viz
  #single-col
    %h2{style: "text-align:center;"} Number of Visitors Per Month Per Library Fiscal Year 2023
    = line_chart [{name: "BioTech", data: bio_2023_people}, {name: "Furness", data: furn_2023_people},{name: "Van Pelt", data: vp_2023_people}], xtitle:"Months", ytitle: "Number of Visitors", legend: true, curve: false, download: true   

-sas_gen_table=gen_stats(freq_table,2023,"Van Pelt","College of Arts & Sciences")
-percents_zero,percents_single,percents_medium,percents_freq=time_counts(sas_gen_table,"Weekly","Frequency",input_school_index)

-pop_baseline={"1":1,"26":1}
-user_baseline=Hash.new
-for i in (0..25).to_a
  -user_baseline["#{i+1}"]=0.7

-#new Chartkick.ColumnChart("chart",[{"name": "Single Visit", "data": percents_single},{"name": "Medium Visits", "data": percents_medium}, {"name":"Freq Visits", "data": percents_freq},{"name":"User Baseline", "data":user_baseline}], { library: { series: { 0: { color: "red"}, 1: { type: "line", color: "yellow" }, 2: { type: "line", color: "blue" },  3: { type: "line", color: "black" } } } });

#data-viz
  #single-col
    -#column_chart([{"name":"User Baseline", "data":user_baseline},{"name": "Single Visit", "data": percents_single},{"name": "Medium Visits", "data": percents_medium}, {"name":"Freq Visits", "data": percents_freq}],  library: { :series => { 0 => { type: "line_chart"}}})

#data-viz
  #single-col
    %h2{style: "text-align:center;"} Frequency of College of Arts and Sciences Visitors to the Van Pelt Library, Spring Semester 2023
    = column_chart [{name: "Single Visit", data: percents_single},{name: "Medium Visits", data: percents_medium}, {name:"Freq Visits", data: percents_freq}], xtitle:"Week of the Semester", ytitle: "Percent of the School Population", legend: true, dataset:{borderWidth:0}, max: 0.7, stacked: true, download: true   

Note that the y-scale of the plot above is set to the percent of the college population that used the library over the course of the semester. The bars indicate the percent of library users that went to the library within a given week.

-vp_gen_table=gen_stats(time_table,"All","Van Pelt","All")
-vp_all_counts=time_counts(vp_gen_table,"All","Counts")
-vp_percent_change=percent_change(vp_all_counts)

-month_names=["Statistics","July","August","September","October","November","December","January","February","March","April","May","June","Total"]

-month_range=(0..13).to_a

-year_range=[2017,2018,2019,2020,2021,2022,2023]

-year_index=(0..year_range.length-1).to_a

%section

  %h2{style: "text-align:center;"} Monthly Gate Count Tables By Library
  The charts that follow have a "% Change" column which are calculated relative to the gate counts from 2023. These cells are highlighted blue if the number of gate counts are higher than those relative to 2023, and red if the number of gate counts are lower relative to 2023.

  %h2{style: "text-align:center;"} Van Pelt Monthly Gate Counts

  %table{align: "center", border: "1", cellpadding: "5"}
    %thead
      %tr
        %td Fiscal Year
        -for i in year_index
          -fiscal_year=year_range[i]
          %td{:colspan => 2, :align => "center"}="#{fiscal_year}"
      %tbody
      -for m in month_range
        %tr
        -column_title=month_names[m]
        %td="#{column_title}"
        -for y in year_index
          -data_one=vp_all_counts[y+1][month_names[m]]
          -data_two=vp_percent_change[y+1][month_names[m]]
          -if data_two.is_a? Numeric
            -if data_two > 0
              %td{:align => "center"}="#{data_one}"
              %td{style: 'background-color: #ADD8E6;', :align => "center"}="#{data_two}"
            -elsif data_two < 0
              %td{:align => "center"}="#{data_one}"
              %td{style: 'background-color: #FFA07A;', :align => "center"}="#{data_two}"
            -elsif data_two==0
              %td{:align => "center"}="#{data_one}"
              %td{:align => "center"}="#{data_two}"
          -else
            %td{:align => "center"}="#{data_one}"
            %td{:align => "center"}="#{data_two}"

-bio_gen_table=gen_stats(time_table,"All","Biotech","All")
-bio_counts=time_counts(bio_gen_table,"All","Counts")

-year_range=[2016,2017,2018,2019,2020,2021,2022,2023]

-year_index=(1..year_range.length-1).to_a

-bio_all_counts=[{},{},{},{},{},{}]

-for m in month_range
  -bio_all_counts[0][month_names[m]]=bio_2016[m]
  -bio_all_counts[1][month_names[m]]=bio_2017[m]
  -bio_all_counts[2][month_names[m]]=bio_2018[m]
  -bio_all_counts[3][month_names[m]]=bio_2019[m]
  -bio_all_counts[4][month_names[m]]=bio_2020[m]
  -bio_all_counts[5][month_names[m]]=bio_2021[m]

-bio_all_counts.concat(bio_counts)
-bio_percent_change=percent_change(bio_all_counts)

%section

  %h2{style: "text-align:center;"} Biotech Monthly Gate Counts

  %table{align: "center", border: "1", cellpadding: "5"}
    %thead
      %tr
        %td Fiscal Year
        -for i in year_index
          -fiscal_year=year_range[i]
          %td{:colspan => 2, :align => "center"}="#{fiscal_year}"
    %tbody
      -for m in month_range
        %tr
        -column_title=month_names[m]
        %td="#{column_title}"
        -for i in year_index
          -data_one=bio_all_counts[i][month_names[m]]
          -data_two=bio_percent_change[i][month_names[m]]
          -if data_two.is_a? Numeric
            -if data_two > 0
              %td{:align => "center"}="#{data_one}"
              %td{style: 'background-color: #ADD8E6;', :align => "center"}="#{data_two}"
            -elsif data_two < 0
              %td{:align => "center"}="#{data_one}"
              %td{style: 'background-color: #FFA07A;', :align => "center"}="#{data_two}"
            -elsif data_two==0
              %td{:align => "center"}="#{data_one}"
              %td{:align => "center"}="#{data_two}"
          -else
            %td{:align => "center"}="#{data_one}"
            %td{:align => "center"}="#{data_two}"


-furn_gen_table=gen_stats(time_table,"All","Furness","All")
-furn_all_counts=time_counts(furn_gen_table,"All","Counts")
-furn_percent_change=percent_change(furn_all_counts)

-year_range=[2020,2021,2022,2023]

-year_index=(0..year_range.length-1).to_a

%section

  %h2{style: "text-align:center;"} Furness Monthly Gate Counts

  %table{align: "center", border: "1", cellpadding: "5"}
    %thead
      %tr
        %td Fiscal Year
        -for i in year_index
          -fiscal_year=year_range[i]
          %td{:colspan => 2, :align => "center"}="#{fiscal_year}"
    %tbody
      -for m in month_range
        %tr
        -column_title=month_names[m]
        %td="#{column_title}"
        -for y in year_index
          -data_one=furn_all_counts[y+1][month_names[m]]
          -data_two=furn_percent_change[y+1][month_names[m]]
          -if data_two.is_a? Numeric
            -if data_two > 0
              %td{:align => "center"}="#{data_one}"
              %td{style: 'background-color: #ADD8E6;', :align => "center"}="#{data_two}"
            -elsif data_two < 0
              %td{:align => "center"}="#{data_one}"
              %td{style: 'background-color: #FFA07A;', :align => "center"}="#{data_two}"
            -elsif data_two==0
              %td{:align => "center"}="#{data_one}"
              %td{:align => "center"}="#{data_two}"
          -else
            %td{:align => "center"}="#{data_one}"
            %td{:align => "center"}="#{data_two}"
